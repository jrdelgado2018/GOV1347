# Set R Markdown settings and load necessary packages
knitr::opts_chunk$set(echo=FALSE, fig.align="center")
knitr::opts_knit$set(root.dir="~/Desktop/GOV1347.nosync")
library(tidyverse)
library(gridExtra)
library(usmap)
library(sf)
library(rmapshaper)
library(lubridate)
# load geographic data
get_congress_map = function() {
tmp_file = tempfile()
tmp_dir = tempdir()
download.file("https://cdmaps.polisci.ucla.edu/shp/districts114.zip", tmp_file)
unzip(zipfile=tmp_file, exdir=tmp_dir)
fpath = paste(tmp_dir, "districtShapes/districts114.shp", sep="/")
st_read(fpath)
}
districts = get_congress_map()
districts$DISTRICT = as.numeric(districts$DISTRICT)
# Read in the voting data, filter for elections where there was a Democrat and a
# Republican, create columns for whether either candidate is the incumbent, join
# with CVAP data to calculate turnout, join with Inside Elections ratings data,
# and join with relevant variables from the previous election
votes = read_csv("data/incumb_dist_1948-2020.csv") %>%
filter(!is.na(RepCandidate) & !is.na(DemCandidate)) %>%
rename(DemPct = DemVotesMajorPercent)
votes = votes %>%
left_join((
votes %>%
mutate(year = year + 2) %>%
select(year, st_cd_fips, DemPct) %>%
rename(DemPctPrev = DemPct)
), c("year", "st_cd_fips"))
#  by=c("st_cd_fips" = "geoid", "year" = "year"))
ratings = read_csv("data/inside_elections.csv") %>%
mutate(DemIncumbent = inc_party == "Democrat",
RepIncumbent = inc_party == "Republican")
# Read in the state unemployment data, filtering for the Q4 numbers
unemp_Q4 = read_csv("data/unemployment_state_monthly.csv") %>%
filter(Month == 10) %>%
rename(UnempQ4 = Unemployed_prct) %>%
select(Year, `State and area`, UnempQ4)
# Get the poll data, filter for polls within 1 month of the election, and take simple average of results
polls = read_csv("data/polls_df.csv") %>%
filter(emonth %in% c(10, 11)) %>%
mutate(isDemocrat = party == "D") %>%
group_by(year) %>%
summarize(D = sum(support * isDemocrat) / sum(isDemocrat), R = sum(support * (1 - isDemocrat)) / sum(1 - isDemocrat)) %>%
mutate(DemPolls = D / (D + R))
votes
votes$st_cd_fips
unique(votes$st_cd_fips)
view(votes)
mod = lm(DemPct ~ DemPctPrev, data=votes)
mod
mod$coefficients
mod$coefficients["DemPctPrev"]
mod$coefficients["DemPctPrev"] + 1
autocorrs = c()
for (id in unique(votes$st_cd_fips)) {
df = filter(votes, st_cd_fips == id)
mod = lm(DemPct ~ DemPctPrev, data=df)
autocorrs = c(mod$coefficients["DemPctPrev"], autocorrs)
}
autocorrs
autocorrs = c()
for (id in unique(votes$st_cd_fips)) {
df = filter(votes, st_cd_fips == id)
autocorrs = c(cor(df$DemPct, df$DemPctPrev), autocorrs)
}
autocorrs
autocorrs = c()
for (id in unique(votes$st_cd_fips)) {
df = votes %>%
filter(st_cd_fips == id) %>%
select(DemPct, DemPctPrev) %>%
drop_na()
autocorrs = c(cor(df$DemPct, df$DemPctPrev), autocorrs)
}
autocorrs
votes %>% group_by(st_cd_fips) %>% summarize(c = n())
votes %>% group_by(st_cd_fips) %>% summarize(c = n()) %>% view()
votes %>% group_by(st_cd_fips) %>% summarize(c = n()) %>% arrange(c)
votes %>% group_by(st_cd_fips) %>% summarize(c = n()) %>% arrange(c) %>% view()
votes %>% group_by(st_cd_fips) %>% summarize(c = n()) %>% group_by(c) %>% summarize(n = n())
votes %>% group_by(st_cd_fips) %>% summarize(c = n()) %>% group_by(c) %>% summarize(n = n()) %>% view()
autocorrs = c()
for (id in unique(votes$st_cd_fips)) {
df = votes %>%
filter(st_cd_fips == id) %>%
select(DemPct, DemPctPrev)
if (nrow(df) > 16) {
df = drop_na(df)
autocorrs = c(cor(df$DemPct, df$DemPctPrev), autocorrs)
}
}
autocorrs
autocorrs = c()
ids = c()
for (id in unique(votes$st_cd_fips)) {
df = votes %>%
filter(st_cd_fips == id) %>%
select(DemPct, DemPctPrev)
if (nrow(df) > 16) {
df = drop_na(df)
autocorrs = c(cor(df$DemPct, df$DemPctPrev), autocorrs)
ids = c(id, ids)
}
}
df1 = data.frame(st_cd_fips = ids, Autocorrelation = autocorrs)
df1 %>% ggplot(aes(Autocorrelation)) +
geom_histogram()
autocorrs = c()
ids = c()
for (id in unique(votes$st_cd_fips)) {
df = votes %>%
filter(st_cd_fips == id) %>%
select(DemPct, DemPctPrev)
if (nrow(df) > 16) {
df = drop_na(df)
autocorrs = c(cor(df$DemPct, df$DemPctPrev), autocorrs)
ids = c(id, ids)
}
}
df1 = data.frame(st_cd_fips = ids, Autocorrelation = autocorrs)
df1 %>% ggplot(aes(Autocorrelation)) +
geom_histogram(bins=40) +
ggtitle("Histogram of District-Specific Vote Share Autocorrelations") +
xlab("Autocorrelation of Democrat Vote Share") +
ylab("Number of Districts")
df1
# Simplify the boundaries so it can plot
districts_simp <- ms_simplify(inner_join(districts, df1, "st_cd_fips"), keep = 0.01)
districts
# Join the district data to our data using FIPS code
fips = select(read_csv("data/incumb_dist_1948-2020.csv"), st_cd_fips, state, district_num) %>% unique()
fips$district_num = as.numeric(fips$district_num)
districts = left_join(districts, fips, c("STATENAME" = "state", "DISTRICT" = "district_num"))
# Simplify the boundaries so it can plot
districts_simp <- ms_simplify(inner_join(districts, df1, "st_cd_fips"), keep = 0.01)
# Make the map
ggplot() +
geom_sf(data=districts_simp, aes(fill=Autocorrelation),
inherit.aes=FALSE, alpha=0.9) +
scale_fill_gradient(low="white", high="blue", limits=c(0.5, 1)) +
coord_sf(xlim=c(-124.8, -66.9), ylim=c(24.5, 49.4), expand=FALSE) +
theme_void() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
ggtitle("Autocorrelation of Democrat Vote Share, By District")
# Join the district data to our data using FIPS code
fips = select(read_csv("data/incumb_dist_1948-2020.csv"), st_cd_fips, state, district_num) %>% unique()
fips$district_num = as.numeric(fips$district_num)
districts = left_join(districts, fips, c("STATENAME" = "state", "DISTRICT" = "district_num"))
# Simplify the boundaries so it can plot
districts_simp <- ms_simplify(inner_join(districts, df1, "st_cd_fips"), keep = 0.01)
# Join the district data to our data using FIPS code
#fips = select(read_csv("data/incumb_dist_1948-2020.csv"), st_cd_fips, state, district_num) %>% unique()
#fips$district_num = as.numeric(fips$district_num)
#districts = left_join(districts, fips, c("STATENAME" = "state", "DISTRICT" = "district_num"))
# Simplify the boundaries so it can plot
districts_simp <- ms_simplify(inner_join(districts, df1, "st_cd_fips"), keep = 0.01)
# Join the district data to our data using FIPS code
#fips = select(read_csv("data/incumb_dist_1948-2020.csv"), st_cd_fips, state, district_num) %>% unique()
#fips$district_num = as.numeric(fips$district_num)
#districts = left_join(districts, fips, c("STATENAME" = "state", "DISTRICT" = "district_num"))
# Simplify the boundaries so it can plot
#districts_simp <- ms_simplify(inner_join(districts, df1, "st_cd_fips"), keep = 0.01)
# Make the map
ggplot() +
geom_sf(data=districts_simp, aes(fill=Autocorrelation),
inherit.aes=FALSE, alpha=0.9) +
scale_fill_gradient(low="red", high="blue") +
coord_sf(xlim=c(-124.8, -66.9), ylim=c(24.5, 49.4), expand=FALSE) +
theme_void() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
ggtitle("Autocorrelation of Democrat Vote Share, By District")
view(votes)
unemps = c()
ids = c()
for (id in unique(votes$st_cd_fips)) {
df = votes %>%
filter(st_cd_fips == id) %>%
inner_join(unemp_Q4, by=c("year" = "Year", "state" = "State and area")) %>%
select(DemPct, UnempQ4)
if (nrow(df) > 16) {
mod = lm(DemPct ~ UnempQ4, data=drop_na(df))
unemps = c(mod$coefficients["UnempQ4"], unemps)
ids = c(id, ids)
}
}
df2 = data.frame(st_cd_fips = ids, Coefficients = unemps)
df2 %>% ggplot(aes(Coefficients)) +
geom_histogram(bins=40) +
ggtitle("Histogram of District-Specific Unemployment Coefficients") +
xlab("Coefficient of Statewide Q4 Unemployment in Democrat Vote Share Model") +
ylab("Number of Districts")
# Read in the voting data, filter for elections where there was a Democrat and a
# Republican, create columns for whether either candidate is the incumbent, join
# with CVAP data to calculate turnout, join with Inside Elections ratings data,
# and join with relevant variables from the previous election
votes = read_csv("data/incumb_dist_1948-2020.csv") %>%
filter(!is.na(RepCandidate) & !is.na(DemCandidate)) %>%
rename(DemPct = DemVotesMajorPercent)
votes = votes %>%
left_join((
votes %>%
mutate(year = year + 2) %>%
select(year, st_cd_fips, DemPct) %>%
rename(DemPctPrev = DemPct)
), c("year", "st_cd_fips"))
#  by=c("st_cd_fips" = "geoid", "year" = "year"))
ratings = read_csv("data/inside_elections.csv") %>%
mutate(DemIncumbent = inc_party == "Democrat",
RepIncumbent = inc_party == "Republican")
# Read in the state unemployment data, filtering for the Q4 numbers
unemp_Q4 = read_csv("data/unemployment_state_monthly.csv") %>%
filter(Month == 10) %>%
rename(UnempQ4 = Unemployed_prct) %>%
select(Year, `State and area`, UnempQ4)
unemp_Q3 = read_csv("data/unemployment_state_monthly.csv") %>%
filter(Month == 7) %>%
rename(UnempQ4 = Unemployed_prct) %>%
select(Year, `State and area`, UnempQ3)
unemps = c()
ids = c()
for (id in unique(votes$st_cd_fips)) {
df = votes %>%
filter(st_cd_fips == id) %>%
inner_join(unemp_Q4, by=c("year" = "Year", "state" = "State and area")) %>%
inner_join(unemp_Q3, by=c("year" = "Year", "state" = "State and area")) %>%
select(DemPct, UnempQ4, UnempQ3) %>%
mutate(PctChange = (UnempQ4 - UnempQ3) / UnempQ3)
if (nrow(df) > 16) {
mod = lm(DemPct ~ PctChange, data=drop_na(df))
unemps = c(mod$coefficients["PctChange"], unemps)
ids = c(id, ids)
}
}
# Read in the voting data, filter for elections where there was a Democrat and a
# Republican, create columns for whether either candidate is the incumbent, join
# with CVAP data to calculate turnout, join with Inside Elections ratings data,
# and join with relevant variables from the previous election
votes = read_csv("data/incumb_dist_1948-2020.csv") %>%
filter(!is.na(RepCandidate) & !is.na(DemCandidate)) %>%
rename(DemPct = DemVotesMajorPercent)
votes = votes %>%
left_join((
votes %>%
mutate(year = year + 2) %>%
select(year, st_cd_fips, DemPct) %>%
rename(DemPctPrev = DemPct)
), c("year", "st_cd_fips"))
#  by=c("st_cd_fips" = "geoid", "year" = "year"))
ratings = read_csv("data/inside_elections.csv") %>%
mutate(DemIncumbent = inc_party == "Democrat",
RepIncumbent = inc_party == "Republican")
# Read in the state unemployment data, filtering for the Q4 numbers
unemp_Q4 = read_csv("data/unemployment_state_monthly.csv") %>%
filter(Month == 10) %>%
rename(UnempQ4 = Unemployed_prct) %>%
select(Year, `State and area`, UnempQ4)
unemp_Q3 = read_csv("data/unemployment_state_monthly.csv") %>%
filter(Month == 7) %>%
rename(UnempQ4 = Unemployed_prct) %>%
select(Year, `State and area`, UnempQ3)
# Read in the voting data, filter for elections where there was a Democrat and a
# Republican, create columns for whether either candidate is the incumbent, join
# with CVAP data to calculate turnout, join with Inside Elections ratings data,
# and join with relevant variables from the previous election
votes = read_csv("data/incumb_dist_1948-2020.csv") %>%
filter(!is.na(RepCandidate) & !is.na(DemCandidate)) %>%
rename(DemPct = DemVotesMajorPercent)
votes = votes %>%
left_join((
votes %>%
mutate(year = year + 2) %>%
select(year, st_cd_fips, DemPct) %>%
rename(DemPctPrev = DemPct)
), c("year", "st_cd_fips"))
#  by=c("st_cd_fips" = "geoid", "year" = "year"))
ratings = read_csv("data/inside_elections.csv") %>%
mutate(DemIncumbent = inc_party == "Democrat",
RepIncumbent = inc_party == "Republican")
# Read in the state unemployment data, filtering for the Q4 numbers
unemp_Q4 = read_csv("data/unemployment_state_monthly.csv") %>%
filter(Month == 10) %>%
rename(UnempQ4 = Unemployed_prct) %>%
select(Year, `State and area`, UnempQ4)
unemp_Q3 = read_csv("data/unemployment_state_monthly.csv") %>%
filter(Month == 7) %>%
rename(UnempQ3 = Unemployed_prct) %>%
select(Year, `State and area`, UnempQ3)
# Get the poll data, filter for polls within 1 month of the election, and take simple average of results
polls = read_csv("data/polls_df.csv") %>%
filter(emonth %in% c(10, 11)) %>%
mutate(isDemocrat = party == "D") %>%
group_by(year) %>%
summarize(D = sum(support * isDemocrat) / sum(isDemocrat), R = sum(support * (1 - isDemocrat)) / sum(1 - isDemocrat)) %>%
mutate(DemPolls = D / (D + R))
unemps = c()
ids = c()
for (id in unique(votes$st_cd_fips)) {
df = votes %>%
filter(st_cd_fips == id) %>%
inner_join(unemp_Q4, by=c("year" = "Year", "state" = "State and area")) %>%
inner_join(unemp_Q3, by=c("year" = "Year", "state" = "State and area")) %>%
select(DemPct, UnempQ4, UnempQ3) %>%
mutate(PctChange = (UnempQ4 - UnempQ3) / UnempQ3)
if (nrow(df) > 16) {
mod = lm(DemPct ~ PctChange, data=drop_na(df))
unemps = c(mod$coefficients["PctChange"], unemps)
ids = c(id, ids)
}
}
df2 = data.frame(st_cd_fips = ids, Coefficients = unemps)
df2 %>% ggplot(aes(Coefficients)) +
geom_histogram(bins=40) +
ggtitle("Histogram of District-Specific Unemployment Coefficients") +
xlab("Coefficient of Statewide Q4 Unemployment Rate, in Model for Democrat Vote Share") +
ylab("Number of Districts")
unemps = c()
ids = c()
for (id in unique(votes$st_cd_fips)) {
df = votes %>%
filter(st_cd_fips == id) %>%
inner_join(unemp_Q4, by=c("year" = "Year", "state" = "State and area")) %>%
inner_join(unemp_Q3, by=c("year" = "Year", "state" = "State and area")) %>%
select(DemPct, UnempQ4, UnempQ3) %>%
mutate(PctChange = UnempQ4 - UnempQ3)
if (nrow(df) > 16) {
mod = lm(DemPct ~ PctChange, data=drop_na(df))
unemps = c(mod$coefficients["PctChange"], unemps)
ids = c(id, ids)
}
}
df2 = data.frame(st_cd_fips = ids, Coefficients = unemps)
df2 %>% ggplot(aes(Coefficients)) +
geom_histogram(bins=40) +
ggtitle("Histogram of District-Specific Unemployment Coefficients") +
xlab("Coefficient of Statewide Q4 Unemployment Rate, in Model for Democrat Vote Share") +
ylab("Number of Districts")
mod
mod$effects
summary(mod)
summary(mod)$pvalues
s = summary(mod)
s$coefficients
s$coefficients["PctChange", "t value"]
unemps = c()
ids = c()
for (id in unique(votes$st_cd_fips)) {
df = votes %>%
filter(st_cd_fips == id) %>%
inner_join(unemp_Q4, by=c("year" = "Year", "state" = "State and area")) %>%
inner_join(unemp_Q3, by=c("year" = "Year", "state" = "State and area")) %>%
select(DemPct, UnempQ4, UnempQ3) %>%
mutate(PctChange = UnempQ4 - UnempQ3)
if (nrow(df) > 16) {
mod = lm(DemPct ~ PctChange, data=drop_na(df))
unemps = c(summary(mod)$coefficients["PctChange", "t value"], unemps)
ids = c(id, ids)
}
}
df2 = data.frame(st_cd_fips = ids, Coefficients = unemps)
df2 %>% ggplot(aes(Coefficients)) +
geom_histogram(bins=40) +
ggtitle("Histogram of District-Specific Unemployment Coefficients") +
xlab("Coefficient of Statewide Q4 Unemployment Rate, in Model for Democrat Vote Share") +
ylab("Number of Districts")
unemps = c()
ids = c()
for (id in unique(votes$st_cd_fips)) {
df = votes %>%
filter(st_cd_fips == id) %>%
inner_join(unemp_Q4, by=c("year" = "Year", "state" = "State and area")) %>%
inner_join(unemp_Q3, by=c("year" = "Year", "state" = "State and area")) %>%
select(DemPct, UnempQ4, UnempQ3) %>%
mutate(PctChange = UnempQ4)
if (nrow(df) > 16) {
mod = lm(DemPct ~ PctChange, data=drop_na(df))
unemps = c(summary(mod)$coefficients["PctChange", "t value"], unemps)
ids = c(id, ids)
}
}
df2 = data.frame(st_cd_fips = ids, Coefficients = unemps)
df2 %>% ggplot(aes(Coefficients)) +
geom_histogram(bins=40) +
ggtitle("Histogram of District-Specific Unemployment Coefficients") +
xlab("Coefficient of Statewide Q4 Unemployment Rate, in Model for Democrat Vote Share") +
ylab("Number of Districts")
unemps = c()
ids = c()
for (id in unique(votes$st_cd_fips)) {
df = votes %>%
filter(st_cd_fips == id) %>%
inner_join(unemp_Q4, by=c("year" = "Year", "state" = "State and area")) %>%
inner_join(unemp_Q3, by=c("year" = "Year", "state" = "State and area")) %>%
select(DemPct, UnempQ4, UnempQ3, DemPctPrev) %>%
mutate(PctChange = (UnempQ4 - UnempQ3) / UnempQ3)
if (nrow(df) > 16) {
mod = lm(DemPct ~ PctChange, data=drop_na(df))
unemps = c(summary(mod)$coefficients["PctChange", "t value"], unemps)
ids = c(id, ids)
}
}
df2 = data.frame(st_cd_fips = ids, Coefficients = unemps)
df2 %>% ggplot(aes(Coefficients)) +
geom_histogram(bins=40) +
ggtitle("Histogram of District-Specific Unemployment Coefficients") +
xlab("Coefficient of Statewide Q4 Unemployment Rate, in Model for Democrat Vote Share") +
ylab("Number of Districts")
unemps = c()
ids = c()
ts = c()
for (id in unique(votes$st_cd_fips)) {
df = votes %>%
filter(st_cd_fips == id) %>%
inner_join(unemp_Q4, by=c("year" = "Year", "state" = "State and area")) %>%
inner_join(unemp_Q3, by=c("year" = "Year", "state" = "State and area")) %>%
select(DemPct, UnempQ4, UnempQ3, DemPctPrev) %>%
mutate(PctChange = (UnempQ4 - UnempQ3) / UnempQ3)
if (nrow(df) > 16) {
mod = lm(DemPct ~ UnempQ4 + DemPctPrev, data=drop_na(df))
ts = c(summary(mod)$coefficients["UnempQ4", "t value"], ts)
unemps = c(mod$coefficients["UnempQ4"], unemps)
ids = c(id, ids)
}
}
df2 = data.frame(st_cd_fips = ids, Coefficients = unemps, TStatistics = ts)
p1 = df2 %>% ggplot(aes(Coefficients)) +
geom_histogram(bins=40) +
ggtitle("Histogram of District-Specific Unemployment Coefficients") +
xlab("Coefficient of Statewide Q4 Unemployment Rate,\nin Model for Democrat Vote Share") +
ylab("Number of Districts")
p2 = df2 %>% ggplot(aes(Tstatistics)) +
geom_histogram(bins=40) +
ggtitle("Histogram of District-Specific Unemployment Coefficient t-Statistics") +
xlab("t-Statistic of Coefficient of Statewide Q4 Unemployment Rate,\nin Model for Democrat Vote Share") +
ylab("Number of Districts")
grid.arrange(p1, p2, ncol=2)
unemps = c()
ids = c()
ts = c()
for (id in unique(votes$st_cd_fips)) {
df = votes %>%
filter(st_cd_fips == id) %>%
inner_join(unemp_Q4, by=c("year" = "Year", "state" = "State and area")) %>%
inner_join(unemp_Q3, by=c("year" = "Year", "state" = "State and area")) %>%
select(DemPct, UnempQ4, UnempQ3, DemPctPrev) %>%
mutate(PctChange = (UnempQ4 - UnempQ3) / UnempQ3)
if (nrow(df) > 16) {
mod = lm(DemPct ~ UnempQ4 + DemPctPrev, data=drop_na(df))
ts = c(summary(mod)$coefficients["UnempQ4", "t value"], ts)
unemps = c(mod$coefficients["UnempQ4"], unemps)
ids = c(id, ids)
}
}
df2 = data.frame(st_cd_fips = ids, Coefficients = unemps, TStatistics = ts)
p1 = df2 %>% ggplot(aes(Coefficients)) +
geom_histogram(bins=40) +
ggtitle("Histogram of District-Specific Unemployment Coefficients") +
xlab("Coefficient of Statewide Q4 Unemployment Rate,\nin Model for Democrat Vote Share") +
ylab("Number of Districts")
p2 = df2 %>% ggplot(aes(TStatistics)) +
geom_histogram(bins=40) +
ggtitle("Histogram of District-Specific Unemployment Coefficient t-Statistics") +
xlab("t-Statistic of Coefficient of Statewide Q4 Unemployment Rate,\nin Model for Democrat Vote Share") +
ylab("Number of Districts")
grid.arrange(p1, p2, ncol=2)
unemps = c()
ids = c()
ts = c()
for (id in unique(votes$st_cd_fips)) {
df = votes %>%
filter(st_cd_fips == id) %>%
inner_join(unemp_Q4, by=c("year" = "Year", "state" = "State and area")) %>%
inner_join(unemp_Q3, by=c("year" = "Year", "state" = "State and area")) %>%
select(DemPct, UnempQ4, UnempQ3, DemPctPrev) %>%
mutate(PctChange = (UnempQ4 - UnempQ3) / UnempQ3)
if (nrow(df) > 16) {
mod = lm(DemPct ~ UnempQ4 + DemPctPrev, data=drop_na(df))
ts = c(summary(mod)$coefficients["UnempQ4", "t value"], ts)
unemps = c(mod$coefficients["UnempQ4"], unemps)
ids = c(id, ids)
}
}
df2 = data.frame(st_cd_fips = ids, Coefficients = unemps, TStatistics = ts)
p1 = df2 %>% ggplot(aes(Coefficients)) +
geom_histogram(bins=40) +
ggtitle("Histogram of District-Specific Unemployment Coefficients") +
xlab("Coefficient of Statewide Q4 Unemployment Rate,\nin Model for Democrat Vote Share") +
ylab("Number of Districts")
p2 = df2 %>% ggplot(aes(TStatistics)) +
geom_histogram(bins=40) +
ggtitle("Histogram of District-Specific Unemployment Coefficient t-Statistics") +
xlab("t-Statistic of Coefficient of Statewide Q4 Unemployment Rate,\nin Model for Democrat Vote Share") +
ylab("Number of Districts")
grid.arrange(p1, p2, nrow=2)
